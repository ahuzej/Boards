{"version":3,"sources":["api/AuthAPI.js","slices/userSlice.js","ui/DefaultButton.jsx","ui/FormikBasicInput.jsx","ui/Title.jsx","ui/uiSettings.js","ui/Login.jsx","contexts/NavigationContext.js","hooks/usePaging.js","hooks/useQuery.js","api/ProjectPlannerAPI.js","api/ProjectAPI.js","slices/boardsSlice.js","ui/Divider.jsx","ui/FormikInput.jsx","Boards/BoardListItem.jsx","Boards/BoardItemList.jsx","ui/LinkText.jsx","Boards/BoardList.jsx","ui/PrivateRoute.jsx","ui/ImageFrame.jsx","svgs/user.svg","ui/ProfileIcon.jsx","ui/Navbar.jsx","ui/SectionHeading.jsx","Boards/BoardForm.jsx","ui/Container.jsx","ui/TabHeader.jsx","ui/TabItem.jsx","slices/threadsSlice.js","ui/ModalBox.jsx","ui/FancyTag.jsx","Threads/ThreadListElement.jsx","Threads/ThreadListPane.jsx","ui/AvatarPane.jsx","slices/commentsSlice.js","svgs/up-arrow.svg","svgs/down-arrow.svg","Threads/ThreadComment.jsx","Threads/CommentForm.jsx","Threads/Thread.jsx","Threads/ThreadForm.jsx","slices/usersSlice.js","People/PeopleHome.jsx","ui/AvatarCard.jsx","ui/BaseInput.jsx","ui/ScrollBox.jsx","People/AddPeople.jsx","Boards/BoardHome.jsx","ui/Register.jsx","App.js","app/store.js","app/localStorage.js","index.js"],"names":["loginUser","username","password","Promise","resolve","reject","axios","post","withCredentials","credentials","then","data","token","name","id","loginCredentials","loggedIn","localStorage","setItem","JSON","stringify","catch","error","loginAction","createAsyncThunk","args","a","dispatch","response","console","log","statusCode","logoutAction","Error","createAction","getUserSelector","state","user","createSlice","initialState","status","reducers","extraReducers","pending","action","fulfilled","payload","rejected","styled","button","props","disabled","StyledInput","input","inError","StyledTextArea","textarea","FormikBasicInput","useField","field","meta","touched","children","style","color","h1","dark","Subtitle","h3","className","useState","setUsername","setPassword","useDispatch","history","useHistory","event","preventDefault","push","Title","onSubmit","type","value","onChange","target","to","DefaultButton","theme","lightBg","title","NavigationContext","React","createContext","setTitle","newTitle","usePaging","key","query","URLSearchParams","useLocation","search","get","nextPage","ProjectPlannerAPI","this","_statusCodes","prototype","hasTokenExpired","err","createGetUrl","url","params","paramKeys","Object","keys","first","delimiter","i","length","ProjectAPI","getAll","config","headers","getPeople","users","getUsers","boardId","getById","getThreads","getComments","threadId","getThread","createThread","createBoard","createComment","createRating","thread","addUsersToBoard","getAllBoards","getState","boards","resetBoards","actions","div","vertical","description","map","listItem","_id","span","selected","blackTextColor","linkTextColor","document","filter","setFilter","page","changeCurrentPage","useSelector","itemsPerPage","board","toLowerCase","includes","boardsByNameSelector","totalAmountOfPages","Math","ceil","items","slice","boardsPagingSelector","navContext","useContext","useEffect","evt","Divider","LinkText","onClick","PrivateRoute","src","component","alt","size","bordered","_extends","assign","arguments","source","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref","svgRef","viewBox","ref","ForwardRef","forwardRef","ProfileIcon","visible","setVisible","contextMenuRef","useRef","bubbleListener","addEventListener","path","current","removeEventListener","fill","navigation","navTextColor","h5","SectionHeading","subtitle","BoardSchema","Yup","shape","required","initialValues","values","setSubmitting","validationSchema","formik","isSubmitting","onBlur","handleBlur","handleChange","Container","padding","light","ul","li","getAllThreads","threads","getThreadsSelector","threadsStatusSelector","resetThreads","determineTextColor","determineBorderColor","determineBackgroundColor","loaded","lastComment","sticky","locked","comments","owner","img","dateTime","author","location","moment","fromNow","lastCommentTime","setLastCommentTime","interval","setInterval","clearInterval","pathname","FancyTag","Skeleton","width","format","threadsStatus","ModalBox","height","getAllComments","comment","updateRating","userRating","total","commentsStatusSelector","newRating","commentId","arg","targetComment","find","rating","totalUpvotes","newComment","_ref13","_ref14","_ref15","_ref16","_ref17","x","y","enableBackground","xmlSpace","handleRating","rated","text","resetForm","useParams","commentsPagingSelector","threadByIdSelector","threadsLoaded","commentsStatus","pageNumbers","Array","num","idx","ThreadSchema","max","redirectTo","goBack","fetchUsersForBoard","currentUsers","responseLength","exists","j","currentUsersLength","addedUsersIds","currentUser","currentAdddedUserId","usersByBoardSelector","person","hoverColor","hoverTextColor","onSelect","peopleIds","setPeopleIds","contacts","searchText","setSearchText","userByUsernameSelector","handleClick","prevValues","index","splice","contact","BaseInput","ScrollBox","match","boardByIdSelector","pageTitle","handleTabItemClick","tabValue","TabHeader","TabItem","render","exact","Thread","confirmPassword","email","App","currentNavigation","setCurrentNavigation","boardStatus","Provider","BoardHome","storedState","getItem","parse","loadFromStorage","appReducer","combineReducers","reducer","store","createStore","undefined","applyMiddleware","getDefaultMiddleware","subscribe","serializedState","saveToStorage","ReactDOM","StrictMode","bgColor","getElementById"],"mappings":"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","file":"static/js/main.afeb9598.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst loginUser = (username, password) => {\n    return new Promise((resolve, reject) => {\n        axios.post('http://localhost:3001/auth/signIn', {\n            username, password\n        },{withCredentials: true, credentials: 'include'})\n        .then((data) => {\n            let { token, name, id } = data.data.data;\n            let loginCredentials = {\n                loggedIn: true,\n                token,\n                name,\n                username,\n                id\n            };\n            localStorage.setItem('auth', JSON.stringify(loginCredentials));\n            resolve(loginCredentials);\n        })\n        .catch((error) => reject(error));\n    });\n}\n\nconst logoutUser = function() {\n    if(localStorage.getItem('auth')) {\n        localStorage.removeItem('auth');\n        return true;\n    }\n    return false;\n}\n\nconst getCurrentUser = function() {\n    return localStorage.getItem('auth') ? JSON.parse(localStorage.getItem('auth')) : false;\n}\n\nexport {\n    loginUser,\n    logoutUser,\n    getCurrentUser\n};","import { createAction, createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { loginUser } from \"../api/AuthAPI\";\n\nexport const loginAction = createAsyncThunk('user/login', async (args, { dispatch }) => {\n    const { username, password } = args;\n    try {\n        const response = await loginUser(username, password);\n        console.log(response);\n        return response;\n    } catch (err) {\n        const { statusCode } = err.response.data;\n        if (statusCode && statusCode === - 100) {\n            dispatch(logoutAction());\n        } else {\n            throw new Error('Data fetch failed.');\n        }\n    }\n});\n\nexport const logoutAction = createAction('user/logout');\n\nconst initialState = {\n    status: 'idle',\n    data: {},\n    error: null\n};\n\nexport const getUserSelector = (state) => state.user.data ?? {};\n\nexport const user = createSlice({\n    name: 'user',\n    initialState: initialState,\n    reducers: {\n    },\n    extraReducers: {\n        [loginAction.pending]: (state, action) => {\n            state.status = 'loading';\n            return state;\n        },\n        [loginAction.fulfilled]: (state, action) => {\n            state.status = 'complete';\n            state.data = action.payload;\n            return state;\n        },\n        [loginAction.rejected]: (state, action) => {\n            state.status = 'failed';\n            return state;\n        },\n        [logoutAction]: (state, action) => {\n            state = {};\n            return state;\n        },\n    }\n});\n\n\n","import styled from \"styled-components\";\n\nexport default styled.button`\n    border:1px solid ${props => props.disabled ? '#e8e8e8' : '#cac7c7'};\n    padding: 8px;\n    border-radius: 5px;\n    width: 120px;\n    color: ${props => props.disabled ? '#d0d0d0' : '#797979'};\n    background-color: #e2e2e2;\n    cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n    &:hover {\n        transition: background-color 0.2s ease;\n        transition: color 0.2s ease;\n        background-color: ${props => props.disabled ? '#a8bbe2' : '#385590'};\n        color: white;\n    }\n`;","import { useField } from 'formik';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n    border: 1px solid;\n    border-radius: 5px;\n    border-color: ${props => props.inError ? 'red' : '#ccc'};\n    width: 100%;\n    box-shadow: none;\n    padding: 8px;\n\n`;\n\nexport const StyledTextArea = styled.textarea`\n    border: 1px solid;\n    border-radius: 5px;\n    border-color: ${props => props.inError ? 'red' : '#ccc'};\n    padding: 8px;\n    width: 100%;\n    box-shadow: none;\n    height: 150px;\n    font-family: inherit;\n`;\n\nfunction FormikBasicInput(props) {\n    const [field, meta, helpers] = useField(props);\n    const { error, touched } = meta;\n    const inError = touched && error;\n    return (\n        <>\n            {props.children({ field, inError })}\n\n            { inError && <div style={{ color: 'red' }}>\n                {error}\n            </div>}\n        </>\n    );\n}\n\n\nexport default FormikBasicInput;","import styled from 'styled-components';\nimport { fontSizeLg, fontSizeXl } from './uiSettings';\n\nexport default styled.h1`\n    font-weight: 300;\n    margin: 0;\n    color: ${props => props.dark ?  '#3e3e3e' : '#e2e3e5'};\n    font-size: ${fontSizeXl};\n\n`;\n\nexport const Subtitle = styled.h3`\n    font-weight: 300;\n    margin: 0;\n    font-size: ${fontSizeLg};\n    color: ${props => props.dark ?  '#3e3e3e' : '#e2e3e5'};\n`;","export const edgeDistance = '1rem';\nexport const fontSizeXl = '1.4rem';\nexport const fontSizeLg = '.9rem';\nexport const fontSizeMd = '.8rem';\nexport const fontSizeSm = '.75rem';\nexport const fontDefault = 'font-weight: 300;'\nexport const appName = 'Boards';\nexport const dateFormat = 'DD.MM.YYYY HH:mm:ss';","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { loginAction } from '../slices/userSlice';\nimport DefaultButton from '../ui/DefaultButton';\nimport { StyledInput } from '../ui/FormikBasicInput';\nimport Title from '../ui/Title';\nimport { appName, fontSizeLg } from '../ui/uiSettings';\n\nfunction Login(props) {\n\n    const { className } = props;\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        dispatch(loginAction({ username, password }));\n        history.push('/projects');\n    }\n\n    return (\n        <div className={className}>\n            <div className='login-form'>\n                <Title className='form-title' dark>{appName}</Title>\n                <form onSubmit={handleSubmit}>\n                    <div className='form-input-section'>\n                        <span className='form-input-text'>Username:</span>\n                        <StyledInput type='text' name='username' id='username' value={username} onChange={(event) => setUsername(event.target.value)} />\n                    </div>\n                    <div className='form-input-section'>\n                        <span className='form-input-text'>Password:</span>\n                        <StyledInput type='password' name='password' id='password' value={password} onChange={(event) => setPassword(event.target.value)} />\n                    </div>\n                    <div className='form-buttons'>\n                        <span></span>\n                        <Link to='/register'>Registration</Link>\n                        <DefaultButton type='submit'>Login</DefaultButton>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default styled(Login)`\n    & > .login-form {\n        border: 1px solid #ccc;\n        width: 400px;    \n        top: 45%; \n        right: 50%;\n        transform: translate(50%,-50%);\n        position: absolute;\n        background-color: #f9f9f9;\n        padding: 16px;\n    }\n    & > .login-form > form {\n        display: table;\n        width: 100%;\n        > *:last-child {\n            text-align: right;\n        }\n    }\n    & > .login-form > .form-title {\n        margin-bottom: 8px;\n        color: ${props => props.theme.lightBg};\n    }\n    & .form-input-text {\n        font-size: ${fontSizeLg};\n    }\n    & .form-input-section {\n        height: 50px;\n\n        > *:last-child {\n            display: initial;\n        }\n    }\n    & > .login-form > form > * {\n        display: table-row;\n\n        > *:first-child {\n            margin-right: 8px;\n        }\n    }\n    & .form-buttons {\n        > *:last-child {\n            margin-left: 8px;\n        }\n    }\n    & > .login-form > form > * > * {\n        display: table-cell;\n\n        > *:first-child {\n            margin-right: 8px;\n        }\n\n        > *:last-child {\n            margin-left: 8px;\n        }\n    }\n`;","import React from 'react';\nimport { appName } from '../ui/uiSettings';\nlet title = appName;\nconst NavigationContext = React.createContext({\n    title: title,\n    setTitle: (newTitle) => { title = newTitle; }\n});\n\nexport default NavigationContext;\n","import React, { useMemo } from 'react';\nimport { useHistory } from 'react-router';\nimport useQuery from './useQuery';\n\nfunction usePaging(key) {\n    const query = useQuery();\n    const history = useHistory();\n\n    const page = query.get(key) ? +query.get(key) : 1;\n\n    function changeCurrentPage(nextPage) {\n        history.push({\n            search: `?${key}=${nextPage}`\n        })\n    }\n\n    return [ page, changeCurrentPage ];\n}\n\nexport default usePaging;","import { useLocation } from 'react-router';\n\nexport default () => {\n    return new URLSearchParams(useLocation().search);\n  }\n  ","function ProjectPlannerAPI() {\n    this._statusCodes = {\n        'EXPIRED_TOKEN': -100\n    };\n}\nProjectPlannerAPI.prototype.hasTokenExpired = function (err) {\n    if (err.response) {\n        const { data } = err.response;\n        if (data && data['statusCode'] === this._statusCodes['EXPIRED_TOKEN']) {\n            return true;\n        }\n    }\n    return undefined;\n}\n\nexport default new ProjectPlannerAPI();","import axios from 'axios';\nimport ProjectPlannerAPI from './ProjectPlannerAPI';\n\nfunction createGetUrl(url, params) {\n    let paramKeys = Object.keys(params);\n    let first = true;\n    let delimiter = '?';\n    for(let i=0; i < paramKeys.length; i++) {\n        let key = paramKeys[i];\n        let value = params[key];\n        if(value) {\n            url = `${url}${delimiter}${key}=${value}`;\n            if(first) {\n                first = false;\n                delimiter = '&';\n            }\n        }\n    }\n    return url;\n}\n\nlet ProjectAPI = function () {\n    this.url = 'http://localhost:3001/';\n}\nProjectAPI.prototype = ProjectPlannerAPI;\nProjectAPI.prototype.getAll = async function (token, id) {\n    let response = [];\n    let config = {\n        headers: {\n            'Authorization': `Token ${token}`\n        }\n    };\n\n    response = await axios.get(`${this.url}boards/user/${id}`, config);\n    response = response.data.data;\n    return response;\n}\nProjectAPI.prototype.getPeople = async function (token, id) {\n    let response = [];\n    let config = {\n        headers: {\n            'Authorization': `Token ${token}`\n        }\n    };\n\n    response = await axios.get(`${this.url}boards/${id}/people`, config);\n    response = response.data.data.users;\n    return response;\n}\nProjectAPI.prototype.getUsers = async function (token, username, boardId) {\n    let response = [];\n    let config = {\n        headers: {\n            'Authorization': `Token ${token}`\n        }\n    };\n\n    let url = createGetUrl(`${this.url}users`, {username, boardId});\n    response = await axios.get(url, config);\n    response = response.data.data;\n    \n    return response;\n}\nProjectAPI.prototype.getById = async function (token, id) {\n    let response = [];\n    let config = {\n        headers: {\n            'Authorization': `Token ${token}`\n        }\n    };\n\n    response = await axios.get(`${this.url}boards/${id}`, config);\n    response = response.data.data;\n    \n    return response;\n}\nProjectAPI.prototype.getThreads = async function (token, boardId) {\n    let response = [];\n    let config = {\n        headers: {\n            'Authorization': `Token ${token}`\n        }\n    };\n    \n    response = await axios.get(`${this.url}boards/${boardId}/threads`, config);\n    response = response.data.data;\n    \n    return response;\n}\nProjectAPI.prototype.getComments = async function (token, threadId) {\n    let response = [];\n    let config = {\n        headers: {\n            'Authorization': `Token ${token}`\n        }\n    };\n    \n    response = await axios.get(`${this.url}threads/${threadId}/comments`, config);\n    response = response.data.data;\n    console.log(response);\n    return response;\n}\n\nProjectAPI.prototype.getThread = async function (token, threadId) {\n    let response = [];\n    let config = {\n        headers: {\n            'Authorization': `Token ${token}`\n        }\n    };\n\n    response = await axios.get(`${this.url}threads/${threadId}`, config);\n    response = response.data.data;\n    \n    return response;\n}\nProjectAPI.prototype.createThread = async function (token, data) {\n    let response = null;\n    let config = {\n        headers: {\n            'Authorization': `Token ${token}`\n        }\n    };\n    response = await axios.post(`${this.url}threads/`, data, config);\n    response = response.data.data;\n    \n    return response;\n}\nProjectAPI.prototype.createBoard = async function (token, data) {\n    let response = null;\n    let config = {\n        headers: {\n            'Authorization': `Token ${token}`\n        }\n    };\n    response = await axios.post(`${this.url}boards`, data, config);\n    response = response.data.data;\n    \n    return response;\n}\nProjectAPI.prototype.createComment = async function (token, threadId, data) {\n    let response = null;\n    let config = {\n        headers: {\n            'Authorization': `Token ${token}`\n        }\n    };\n    response = await axios.post(`${this.url}threads/${threadId}/comments/create`, data, config);\n    response = response.data.data;\n\n    return response;\n}\nProjectAPI.prototype.createRating = async function (token, data) {\n    let response = null;\n    let threadId = data.thread;\n    let config = {\n        headers: {\n            'Authorization': `Token ${token}`\n        }\n    };\n    response = await axios.post(`${this.url}threads/${threadId}/comments/rate`, data, config);\n    response = response.data.data;\n    \n    return response;\n}\nProjectAPI.prototype.addUsersToBoard = async function (token, boardId, data) {\n    let response = null;\n    let config = {\n        headers: {\n            'Authorization': `Token ${token}`\n        }\n    };\n    response = await axios.post(`${this.url}boards/${boardId}/addUser`, data, config);\n    response = response.data.data;\n    \n    return response;\n}\nexport default new ProjectAPI();","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport ProjectAPI from \"../api/ProjectAPI\";\nimport { logoutAction } from \"./userSlice\";\n\n\n\nexport const getAllBoards = createAsyncThunk('boards/getAllBoards', async (args, { dispatch, getState }) => {\n    try {\n        const user = getState().user.data;\n        const response = await ProjectAPI.getAll(user.token, user.id);\n        return response;\n    } catch (err) {\n        const { statusCode } = err.response.data;\n        if (statusCode && statusCode === - 100) {\n            dispatch(logoutAction());\n        } else {\n            throw new Error('Request failed.');\n        }\n    }\n});\n\nexport const createBoard = createAsyncThunk('boards/createBoard', async (args, { dispatch }) => {\n    const { data, token } = args;\n    try {\n        const response = await ProjectAPI.createBoard(token, data);\n        return response;\n    } catch (err) {\n        const { statusCode } = err.response.data;\n        if (statusCode && statusCode === - 100) {\n            dispatch(logoutAction());\n        } else {\n            throw new Error('Request failed.');\n        }\n    }\n});\n\nconst initialState = {\n    status: 'idle',\n    data: [],\n    error: null\n};\n\nexport const getBoardsSelector = (state) => state.boards.data;\n\nexport const boardsByNameSelector = (state, name) => {\n    return state.boards.data.filter(board => board.name.toLowerCase().includes(name.toLowerCase()));\n}\n\nexport const boardsPagingSelector = (state, page, itemsPerPage, filter) => {\n    const boards = boardsByNameSelector(state, filter);\n    const totalAmountOfPages = Math.ceil(boards.length / itemsPerPage);\n    return { items: boards.slice((page - 1) * itemsPerPage, page * itemsPerPage), totalAmountOfPages };\n}\n\nexport const boardByIdSelector = (state, id) => state.boards.data.find(board => board._id === id);\n\nexport const boardsArraySizeSelector = (state) => state.boards.data.length;\n\n\nexport const boards = createSlice({\n    name: 'boards',\n    initialState: initialState,\n    reducers: {\n        resetBoards: (state, action) => {\n            state = initialState;\n            return state;\n        }\n    },\n    extraReducers: {\n        [getAllBoards.pending]: (state, action) => {\n            state.status = 'loading';\n            return state;\n        },\n        [getAllBoards.fulfilled]: (state, action) => {\n            state.status = 'complete';\n            state.data = action.payload;\n            return state;\n        },\n        [getAllBoards.rejected]: (state, action) => {\n            state.status = 'failed';\n            state.error = action.payload;\n            return state;\n        },\n    }\n});\n\nexport const { resetBoards } = boards.actions;\n\n","import styled from 'styled-components';\n\n\nexport default styled.div`\n    width: ${props => props.vertical ? '1px' : '100%'};\n    height: ${props => props.vertical ? 'inherit' : '1px'};\n    background-color: #ccc;\n    margin: ${props => props.vertical ? '0' : '.5rem 0'};\n`;","import { useField } from 'formik';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n    border: 1px solid;\n    border-color: ${props => props.inError ? 'red' : '#ccc'};\n    padding: 8px;\n    width: 100%;\n    box-shadow: none;\n`;\n\n\nfunction FormikInput(props) {\n    const [field, meta, helpers] = useField(props);\n    const { error, touched } = meta;\n    const inError = touched && error;\n    console.log(helpers);\n    return (\n        <>\n            <StyledInput size='area' inError={inError} type=\"text\" {...field} {...props} />\n            { inError && <div style={{ color: 'red' }}>\n                {error}\n            </div>}\n        </>\n    );\n}\n\n\nexport default FormikInput;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fontSizeMd } from '../ui/uiSettings';\n\n\nfunction BoardListItem(props) {\n    const { id, title, description, className } = props;\n    return (\n        <Link className={className} to={`/projects/${id}/thread`}>\n            <div className='flexed'>\n                {title}\n            </div>\n            <p className='item-description'>\n                {description}\n            </p>\n            <div className='item-info'>\n                <p>3 new posts</p>\n                <p>15 new comments</p>\n            </div>\n        </Link>\n    );\n}\n\nexport default styled(BoardListItem)`\n    margin:0;\n    padding: 16px;\n    display: block;\n    text-decoration: none;\n    font-size: 1rem;\n    position: relative;\n\n    & .flexed {\n        display: flex;\n    }\n\n    :hover {\n        transition: background-color 0.2s ease;\n        background-color: #2c57af1f;\n        cursor: pointer;\n    }\n    & .img-container {\n        width: 12px;\n        height: 12px;\n        margin-right: 5px;\n    }\n\n    & > .item-description {\n        margin:0;\n        padding-top: 8px;\n        text-decoration: none;\n        font-size: .8rem;\n        color: #3e4384;\n    }\n\n    & > .item-info {\n        position:absolute;\n        right: 8px;\n        top: 16px;\n    }\n\n    & > .item-info > * {\n        margin: 5px 0;\n        padding: 0;\n        color: #797979;\n        font-size: ${fontSizeMd};\n        font-weight: 100;\n    }\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport Item from './BoardListItem';\n\n\nfunction BoardItemList(props) {\n    const { data, className } = props;\n    return (\n        <div className={className}>\n            {data && data.map(listItem => <Item key={listItem._id} id={listItem._id} title={listItem.name} description={listItem.description} />)}\n        </div>\n    );\n}\n\nexport default styled(BoardItemList)`\n    width: 100%;\n    & > *:not(:first-child) {\n        margin-top: 8px;\n    }\n    & > *:not(:last-child) {\n        margin-bottom: 8px;\n    }\n`;","import styled from \"styled-components\";\n\nexport default styled.span`\n    cursor: ${props => props.selected ? 'initial' : 'pointer'};\n    color: ${props => props.selected ? props.theme.blackTextColor : props.theme.linkTextColor};\n    text-decoration: ${props => props.selected ? 'initial' : 'underline'};\n`;","import React, { useContext, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport NavigationContext from '../contexts/NavigationContext';\nimport usePaging from '../hooks/usePaging';\nimport { getAllBoards, boardsPagingSelector } from '../slices/boardsSlice';\nimport Divider from '../ui/Divider';\nimport { StyledInput } from '../ui/FormikInput';\nimport ItemList from './BoardItemList';\nimport LinkText from '../ui/LinkText';\nimport { appName, fontSizeMd } from '../ui/uiSettings';\n\nfunction BoardList(props) {\n\n    document.title = `Boards - ${appName}`;\n\n    const { className } = props;\n    const [filter, setFilter] = useState('');\n    const itemsPerPage = 10;\n    const [page, changeCurrentPage] = usePaging('page');\n    const { items: boards, totalAmountOfPages } = useSelector(state => boardsPagingSelector(state, page, itemsPerPage, filter));\n    const dispatch = useDispatch();\n    const navContext = useContext(NavigationContext);\n\n\n    useEffect(() => {\n        dispatch(getAllBoards());\n    }, [dispatch]);\n\n    useEffect(() => {\n        navContext.setTitle(appName);\n    });\n\n    function handleFilterChange(evt) {\n        setFilter(evt.target.value);\n    }\n\n    return (\n        <div className={className}>\n            <div className='board-list-section'>\n                <div className='flexed-title'>\n                    <div className='navigation-controls'>\n                        Search:\n                        <StyledInput value={filter} onChange={handleFilterChange}></StyledInput>\n                        <Link to='/projects/new'>\n                            New board...\n                        </Link>\n                    </div>\n                </div>\n                <Divider />\n                <div className='content-section'>\n                    <ItemList data={boards} />\n                    <div className='activity-section'>\n                    </div>\n                </div>\n                <div className='board-navigation'>\n                    {page !== 1 && <LinkText onClick={() => changeCurrentPage(page - 1)}>Previous page...</LinkText> }\n                    {page < totalAmountOfPages && <LinkText onClick={() => changeCurrentPage(page + 1)}>Next page...</LinkText> \n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default styled(BoardList)`\n    display: flex;\n    justify-content: space-evenly;\n    & > * {\n        padding: 8px;\n    }\n    & > .board-list-section {\n        flex-grow: 2;\n    }\n    & > .activity-section {\n        flex-grow: .2;\n    }\n    & > .board-list-section > .content-section {\n        display: flex;\n        justify-content: space-around;\n\n    }\n    \n    & .flexed-title {\n        display: flex;\n        justify-content: flex-end;\n        align-items: flex-end;\n    }\n    & > .board-list-section > .flexed-title > .navigation-controls {\n        font-size: ${fontSizeMd};\n        width: 250px;\n    }\n    & .avatar-image {\n        width: 20px;\n        height: 20px;\n        border:1px solid #ccc;\n    }\n    .activity-item-list {\n        font-size: ${fontSizeMd};\n        width: 250px;\n        \n    }\n    .activity-item-list > * {\n        margin: 8px 0;\n    }\n    .activity-item {\n        display: flex;\n    }\n`;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport { getUserSelector } from '../slices/userSlice';\n\n\nfunction PrivateRoute(props) {\n    const user = useSelector(getUserSelector);\n    const { children } = props;\n    if (user.loggedIn) {\n        return <Route {...props}>{children}</Route>\n    } else {\n        return <Redirect to='/login' />;\n    }\n}\n\nexport default PrivateRoute;","import React from 'react';\nimport styled from 'styled-components';\n\n\nfunction ImageFrame(props) {\n\n    const { className, src, component, onClick } = props;\n    return (\n        <div className={className} onClick={onClick}>\n            {component ? component : <img src={src} alt='' /> }\n        </div>\n    );\n}\n\nexport default styled(ImageFrame)`\n    width: ${props => props.size};\n    height: ${props => props.size};\n    border: ${props => props.bordered ? '1px solid #ccc' : 'none'};\n    & > * {\n        width: 100%;\n    }\n    padding: 4px;\n`;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m210.351562 246.632812c33.882813 0 63.21875-12.152343 87.195313-36.128906 23.96875-23.972656 36.125-53.304687 36.125-87.191406 0-33.875-12.152344-63.210938-36.128906-87.191406-23.976563-23.96875-53.3125-36.121094-87.191407-36.121094-33.886718 0-63.21875 12.152344-87.191406 36.125s-36.128906 53.308594-36.128906 87.1875c0 33.886719 12.15625 63.222656 36.128906 87.195312 23.980469 23.96875 53.316406 36.125 87.191406 36.125zm-65.972656-189.292968c18.394532-18.394532 39.972656-27.335938 65.972656-27.335938 25.996094 0 47.578126 8.941406 65.976563 27.335938 18.394531 18.398437 27.339844 39.980468 27.339844 65.972656 0 26-8.945313 47.578125-27.339844 65.976562-18.398437 18.398438-39.980469 27.339844-65.976563 27.339844-25.992187 0-47.570312-8.945312-65.972656-27.339844-18.398437-18.394531-27.34375-39.976562-27.34375-65.976562 0-25.992188 8.945313-47.574219 27.34375-65.972656zm0 0\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m426.128906 393.703125c-.691406-9.976563-2.089844-20.859375-4.148437-32.351563-2.078125-11.578124-4.753907-22.523437-7.957031-32.527343-3.3125-10.339844-7.808594-20.550781-13.375-30.335938-5.769532-10.15625-12.550782-19-20.160157-26.277343-7.957031-7.613282-17.699219-13.734376-28.964843-18.199219-11.226563-4.441407-23.667969-6.691407-36.976563-6.691407-5.226563 0-10.28125 2.144532-20.042969 8.5-6.007812 3.917969-13.035156 8.449219-20.878906 13.460938-6.707031 4.273438-15.792969 8.277344-27.015625 11.902344-10.949219 3.542968-22.066406 5.339844-33.042969 5.339844-10.96875 0-22.085937-1.796876-33.042968-5.339844-11.210938-3.621094-20.300782-7.625-26.996094-11.898438-7.769532-4.964844-14.800782-9.496094-20.898438-13.46875-9.753906-6.355468-14.808594-8.5-20.035156-8.5-13.3125 0-25.75 2.253906-36.972656 6.699219-11.257813 4.457031-21.003906 10.578125-28.96875 18.199219-7.609375 7.28125-14.390625 16.121094-20.15625 26.273437-5.558594 9.785157-10.058594 19.992188-13.371094 30.339844-3.199219 10.003906-5.875 20.945313-7.953125 32.523437-2.0625 11.476563-3.457031 22.363282-4.148437 32.363282-.679688 9.777344-1.023438 19.953125-1.023438 30.234375 0 26.726562 8.496094 48.363281 25.25 64.320312 16.546875 15.746094 38.4375 23.730469 65.066406 23.730469h246.53125c26.621094 0 48.511719-7.984375 65.0625-23.730469 16.757813-15.945312 25.253906-37.589843 25.253906-64.324219-.003906-10.316406-.351562-20.492187-1.035156-30.242187zm-44.90625 72.828125c-10.933594 10.40625-25.449218 15.464844-44.378906 15.464844h-246.527344c-18.933594 0-33.449218-5.058594-44.378906-15.460938-10.722656-10.207031-15.933594-24.140625-15.933594-42.585937 0-9.59375.316406-19.066407.949219-28.160157.617187-8.921874 1.878906-18.722656 3.75-29.136718 1.847656-10.285156 4.199219-19.9375 6.996094-28.675782 2.683593-8.378906 6.34375-16.675781 10.882812-24.667968 4.332031-7.617188 9.316407-14.152344 14.816407-19.417969 5.144531-4.925781 11.628906-8.957031 19.269531-11.980469 7.066406-2.796875 15.007812-4.328125 23.628906-4.558594 1.050781.558594 2.921875 1.625 5.953125 3.601563 6.167969 4.019531 13.277344 8.605469 21.136719 13.625 8.859375 5.648437 20.273437 10.75 33.910156 15.152344 13.941406 4.507812 28.160156 6.796875 42.273437 6.796875 14.113282 0 28.335938-2.289063 42.269532-6.792969 13.648437-4.410156 25.058594-9.507813 33.929687-15.164063 8.042969-5.140624 14.953125-9.59375 21.121094-13.617187 3.03125-1.972656 4.902344-3.042969 5.953125-3.601563 8.625.230469 16.566406 1.761719 23.636719 4.558594 7.636719 3.023438 14.121093 7.058594 19.265625 11.980469 5.5 5.261719 10.484375 11.796875 14.816406 19.421875 4.542969 7.988281 8.207031 16.289062 10.886719 24.660156 2.800781 8.75 5.15625 18.398438 7 28.675782 1.867187 10.433593 3.132812 20.238281 3.75 29.144531v.007812c.636719 9.058594.957031 18.527344.960937 28.148438-.003906 18.449219-5.214844 32.378906-15.9375 42.582031zm0 0\"\n});\n\nvar SvgUser = function SvgUser(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"-42 0 512 512.001\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgUser, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/user.7de5e5f7.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useRef, useState } from 'react';\nimport ImageFrame from './ImageFrame';\nimport LinkText from './LinkText';\nimport { ReactComponent as UserImage } from '../svgs/user.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserSelector, logoutAction } from '../slices/userSlice';\n\nfunction ProfileIcon() {\n    const [visible, setVisible] = useState(false);\n    const contextMenuRef = useRef();\n    const user = useSelector(getUserSelector);\n    const dispatch = useDispatch();\n\n    function onFrameClick() {\n        setVisible(!visible);\n    }\n\n    function handleLogout() {\n        dispatch(logoutAction());\n      }\n\n    useEffect(() => {\n        let bubbleListener = document.addEventListener('mousedown', function (evt) {\n            if(!evt.path.includes(contextMenuRef.current)) {\n                setVisible(false);\n            }\n        });\n        \n        return () => { \n            document.removeEventListener('mousedown', bubbleListener); \n        }\n    }, []);\n\n    return (\n        <div>\n            <ImageFrame className='nav-context-toggler' onClick={onFrameClick} size='30px' bordered={true} component={<UserImage fill='#ccc' />} />\n            {visible && <div ref={contextMenuRef} className='nav-dropdown'>\n                <div className='nav-context-menu'>\n                    <span className='dropdown-username'>{user.username}</span>\n                    <LinkText onClick={handleLogout}>Log out</LinkText>\n                </div>\n            </div>\n            }\n        </div>\n    );\n}\n\nexport default ProfileIcon;","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Title from './Title';\nimport { fontSizeMd } from './uiSettings';\nimport NavigationContext from '../contexts/NavigationContext';\nimport ProfileIcon from './ProfileIcon';\n\nfunction Navbar(props) {\n    const { className } = props;\n    const navigation = useContext(NavigationContext);\n\n    return (\n        <div className={className}>\n            <Title className='nav-title'>{navigation.title}</Title>\n            <div className='flexed'>\n                <Link className='nav-item' to='/projects'>Boards</Link>\n                <div className='relative-container'>\n                    <ProfileIcon />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default styled(Navbar)`\n    display: flex;\n    background-color: ${props => props.theme.lightBg};\n    justify-content: space-between;\n    align-items: center;\n    & .flexed {\n        display: flex;\n        align-items: center;\n        > *:last-child {\n            margin-left: 16px;\n        }\n    }\n    & > * {\n        margin:0 8px;\n        padding: 8px;\n        \n    }\n    & > *:first-child {\n        font-weight: 200;\n    }\n    & .nav-item {\n        text-decoration: none;\n        color: ${props => props.theme.navTextColor};\n        cursor: pointer;\n        font-size: ${fontSizeMd};\n    }\n    & > *:not(:first-child):not(:last-child) {\n        margin:0 8px;\n        padding: 16px;\n    }\n    & > .logout-section {\n        width: 100%;\n        text-align: right;\n    }\n    & .relative-container {\n        position: relative;\n    }\n    .nav-context-toggler {\n        cursor: pointer;\n    }\n    & .nav-dropdown {\n        position: absolute;\n        border: 1px solid #ccc;\n        font-size: ${fontSizeMd};\n        width: 150px;\n        right: 0px;\n        background-color: #fffefe;\n        .dropdown-username {\n            color: ${props => props.theme.lightBg};\n            font-weight: bold;\n        }\n    }\n    & .nav-context-menu {\n        > * {\n            display: block;\n            padding: 8px;\n        }\n    }\n`","import React from 'react';\nimport styled from 'styled-components';\nconst Title = styled.h3`\n    font-weight: 200;\n    margin: 0;\n    font-size: 2rem;\n    color: #3f6094;\n    `;\nconst Subtitle = styled.h5`\n    font-weight: 200;\n    margin: 0;\n    font-size: 1rem;\n    color: #808080;\n`;\n\nfunction SectionHeading(props) {\n    const { title, subtitle } = props;\n    \n    return (\n        <div>\n            <Title>{title}</Title>\n            { subtitle && <Subtitle>{subtitle}</Subtitle> }\n        </div>\n    );\n}\n\n\nexport default SectionHeading;","import { Form, Formik } from 'formik';\nimport React from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport SectionHeading from '../ui/SectionHeading';\nimport styled from 'styled-components';\nimport { StyledInput, StyledTextArea } from '../ui/FormikBasicInput';\nimport DefaultButton from '../ui/DefaultButton';\nimport { useHistory } from 'react-router';\nimport { createBoard } from '../slices/boardsSlice';\nimport { getUserSelector } from '../slices/userSlice';\n\nconst BoardSchema = Yup.object().shape({\n    name: Yup.string().required('Required field'),\n    description: Yup.string()\n}\n);\n\nfunction BoardForm(props) {\n    const { className } = props;\n    const dispatch = useDispatch();\n    const user = useSelector(getUserSelector);\n    const history = useHistory();\n\n    return (\n        <Formik\n            initialValues={{\n                name: '',\n                description: ''\n            }}\n            onSubmit={\n                (values, {setSubmitting}) => {\n                    setSubmitting(true);\n                    dispatch(createBoard({ token: user.token, data: values }));\n                    history.push('/projects');\n                }\n            }\n            validationSchema={BoardSchema}\n        >\n            {(formik) =>\n                <Form className={className}>\n                    <div>\n                        <SectionHeading title='New board' subtitle='Enter basic information about this board.' />\n                        <div>\n                            <span>Title:</span>\n                            <StyledInput disabled={formik.isSubmitting} name='title' id='title' onBlur={formik.handleBlur} onChange={formik.handleChange} value={formik.values.title} />\n                        </div>\n                        <div>\n                            <span>Description:</span>\n                            <StyledTextArea disabled={formik.isSubmitting} name='description' id='description' onBlur={formik.handleBlur} onChange={formik.handleChange} value={formik.values.title} />\n                        </div>\n                    </div>\n                    <DefaultButton type=\"submit\">Create</DefaultButton>\n\n                </Form>\n            }\n        </Formik>\n\n    );\n}\n\nexport default styled(BoardForm)`\n    padding: 1rem;\n    justify-content: space-evenly;\n    @media (max-width: 800px) {\n        flex-direction: column;\n    }\n`;","import styled from \"styled-components\";\nimport { fontSizeSm } from \"./uiSettings\";\nconst Container = styled.div`\npadding: ${props => props.padding ? props.padding : '16px'};\n& .subtitle {\n    font-size: ${fontSizeSm};\n    font-weight: 100;\n    margin:0;\n    padding:0;\n}\nborder: ${props => props.bordered ? '1px solid #ccc' : 'initial'};\nbackground-color: ${props => props.light ? props.theme.lightBg : 'initial'};\n`;\nexport default Container;","import styled from 'styled-components';\n\nexport default styled.ul`\n    list-style: none;\n    display: flex;\n    padding-left: 0;\n    margin: 0;\n    margin-bottom: 8px;\n    background-color: ${props => props.theme.lightBg};\n    padding-bottom: 1px;\n`;","import styled from 'styled-components';\nimport { fontSizeMd } from './uiSettings';\n\nexport default styled.li`\n\n    &:hover {\n        cursor: pointer;\n    }\n    padding: 1rem;\n    color: ${props => props.selected ? '#b7d3ff' : '#eaeaea'};\n    border-bottom: ${props => props.selected ? '2px solid #b7d3ff' : 'none'};\n    font-weight: ${props => props.selected ? 'bold' : 'initial'};\n    font-size: ${fontSizeMd};\n    transition: all 0.15s ease;\n`;","import { createAsyncThunk, createSlice, current } from \"@reduxjs/toolkit\";\nimport ProjectAPI from \"../api/ProjectAPI\";\nimport { logoutAction } from \"./userSlice\";\n\nexport const getAllThreads = createAsyncThunk('threads/getAllThreads', async (args, { dispatch, getState }) => {\n    const { boardId } = args;\n    try {\n        const user = getState().user.data;\n\n        const response = await ProjectAPI.getThreads(user.token, boardId);\n        return {\n            boardId,\n            threads: response\n        };\n    } catch (err) {\n        const { statusCode } = err.response.data;\n        if (statusCode && statusCode === - 100) {\n            dispatch(logoutAction());\n        } else {\n            throw new Error('Request failed.');\n        }\n    }\n});\n\nexport const createThread = createAsyncThunk('threads/createThread', async (args, { dispatch }) => {\n    const { data, token } = args;\n    try {\n        const response = await ProjectAPI.createThread(token, data);\n        return response;\n    } catch (err) {\n        const { statusCode } = err.response.data;\n        if (statusCode && statusCode === - 100) {\n            dispatch(logoutAction());\n        } else {\n            throw new Error('Request failed.');\n        }\n    }\n});\n\nconst initialState = {\n    status: 'idle',\n    data: [],\n    error: null\n};\n\nexport const getThreadsSelector = (state) => {\n    return state.threads.data;\n}\n\nexport const threadsStatusSelector = (state) => {\n    return state.threads.status;\n}\n\nexport const threadByIdSelector = (state, id) => state.threads.data.find(thread => thread._id === id);\n\n\nexport const threads = createSlice({\n    name: 'threads',\n    initialState,\n    reducers: {\n        resetThreads: (state, action) => {\n            state = initialState;\n            return state;\n        }\n    },\n    extraReducers: {\n        [getAllThreads.pending]: (state, action) => {\n            state.status = 'loading';\n            return state;\n        },\n        [getAllThreads.fulfilled]: (state, action) => {\n            if (action.payload) {\n                const { threads } = action.payload;\n                state.status = 'complete';\n                state.data = threads;\n                console.log(current(state));\n            }\n            return state;\n        },\n        [getAllThreads.rejected]: (state, action) => {\n            state.status = 'failed';\n            return state;\n        },\n    }\n});\n\n\nexport const { resetThreads } = threads.actions;\n","import styled from \"styled-components\";\nimport { fontSizeLg } from \"./uiSettings\";\n\nexport default styled.div`\n    & {\n        width: 400px;\n        height: 200px;\n        border:1px solid #ccc;\n        display: flex;\n        align-items: center;\n        border-radius: 5px;\n        background-color: #ececec;\n        font-size: ${fontSizeLg};\n        text-align: center;\n    }\n`;","import styled from \"styled-components\";\nimport { fontSizeSm } from \"./uiSettings\";\n\nfunction determineTextColor(color) {\n    switch(color) {\n        case 'sticky':\n            return '#dbe4e6';\n        case 'locked':\n            return '#dbe4e6';\n        default:\n            break;\n    }\n}\n\nfunction determineBackgroundColor(color) {\n    switch(color) {\n        case 'sticky':\n            return '#6da1ff';\n        case 'locked':\n            return '#7b3fdc';\n        default:\n            break;\n    }\n    return color;\n}\n\nfunction determineBorderColor(color) {\n    switch(color) {\n        case 'sticky':\n            return '#248094';\n        case 'locked':\n            return '#4e4e4e';\n        default:\n            break;\n    }\n    return color;\n}\n\nexport default styled.span`\n    display: inline-block;\n    padding: 5px;\n    color: ${({color}) => determineTextColor(color)};\n    border: 1px solid ${({color}) => determineBorderColor(color)};\n    background-color: ${({color}) => determineBackgroundColor(color)};\n    font-size: ${fontSizeSm};\n`;","import { Skeleton } from '@material-ui/lab';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport FancyTag from '../ui/FancyTag';\nimport ImageFrame from '../ui/ImageFrame';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport { dateFormat, fontSizeLg, fontSizeMd, fontSizeSm } from '../ui/uiSettings';\nimport moment from 'moment';\n\nfunction ThreadListElement(props) {\n    const { className } = props;\n    const { loaded, thread, lastComment } = props;\n    \n    const { _id: id, title, sticky, locked, comments, owner } = thread || {};\n    const { username, img } = owner || {};\n\n    const { dateTime, author } = lastComment || {};\n    const history = useHistory();\n    const { location } = history;\n    const [lastCommentTime, setLastCommentTime] = useState(moment(dateTime).fromNow());\n\n    useEffect(() => {\n        if (dateTime) {\n            const interval = setInterval(() => {\n                setLastCommentTime(moment(dateTime).fromNow());\n            }, 1000);\n\n            return () => clearInterval(interval);\n        }\n    }, []);\n\n    return (\n        <div className={className} onClick={() => history.push(`${location.pathname}/${id}`)}>\n            <div className='thread-list-el-left'>\n                <div>\n                    <h5 className='thread-title'>\n                        {sticky && <FancyTag color='sticky'>Sticky</FancyTag>}\n                        {locked && <FancyTag color='locked'>Locked</FancyTag>}\n                        {loaded ? title : <Skeleton />}\n                    </h5>\n                    <div className='thread-owner'>\n                        <ImageFrame bordered={true} size='30px' src={img ? img : process.env.PUBLIC_URL + '/images/user.svg'} />\n                        <span>{loaded ? username : <Skeleton width='100px' />}</span>\n                    </div>\n                </div>\n                <div className='thread-flexed'>\n                    <span className='thread-element'>{loaded ? `${comments} comments` : <Skeleton width='110px' />}</span>\n                    <span className='thread-element'>{loaded ? (dateTime ? <Moment format={dateFormat}>{dateTime}</Moment> : null) : <Skeleton width='100px' />}</span>\n                </div>\n            </div>\n            <div className='thread-list-el-right'>\n                <div className='thread-last-post'>\n                    <span>Latest post:</span>\n                    <div className='thread-last-post-author'>\n                        <ImageFrame size='30px' src={img ? img : process.env.PUBLIC_URL + '/images/user.svg'} />\n                        <span>{author && author.username}</span>\n                    </div>\n                    <span>{lastCommentTime}</span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default styled(ThreadListElement)`\n    display: flex;\n    justify-content: space-between;\n    border-left: 2px solid ${props => props.theme.lightBg};\n    background-color: ${props => props.sticky ? '#cadefd' : '#f5f5f5'};\n    & span {\n        font-size: ${fontSizeMd};\n    }\n    & h5 {\n        font-size: ${fontSizeMd};\n    }\n    & .thread-list-el-left:hover {\n        transition: background-color 0.2s ease;\n        background-color: #2c57af1f;\n        cursor: pointer;\n    }\n    & > * {\n        padding: 8px;\n        margin-bottom: 1px;\n    }\n    & .thread-list-el-left {\n        flex-grow: 2;\n        padding-right: 8px;\n    }\n    & .thread-title {\n        margin:0;\n        padding:0;\n        font-weight: 400;\n        font-size: ${fontSizeLg};\n        color: ${props => props.sticky ? '#374fab' : props.theme.linkTextColor};\n        margin-bottom: 5px;\n        > * {\n            margin-right: 3px;\n        }\n    }\n    & .thread-list-el-right {\n        width: 120px;\n        background-color: #f5f8fb;\n        > * {\n            font-size: ${fontSizeSm};\n            color: #525252;\n        }\n    }\n    & .thread-last-post-author {\n        display: flex;\n        align-items: center;\n    }\n    & .thread-owner {\n        margin:0;\n        padding:0;\n        font-size: .9rem;\n        color: #6b6b6b;\n        display: flex;\n        align-items: center;\n        > * {\n            :first-child {\n                margin-right: 5px;\n            }\n        }\n    }\n    & .thread-element {\n        font-size: ${fontSizeMd};\n    }\n    & .thread-flexed {\n        margin-top: 8px;\n        display: flex;\n        justify-content: space-between;\n        color: #525252;\n    }\n`;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { getThreadsSelector, threadsStatusSelector } from '../slices/threadsSlice';\nimport Divider from '../ui/Divider';\nimport ModalBox from '../ui/ModalBox';\nimport ThreadListElement from './ThreadListElement';\n\nfunction ThreadListPane(props) {\n\n    const { className, boardId } = props;\n    const threads = useSelector(getThreadsSelector);\n    const threadsStatus = useSelector(state => threadsStatusSelector(state, boardId));\n\n    return (\n        <div className={className}>\n            {threadsStatus === 'error' ? \n                <div className='thread-error'>\n                    <ModalBox><span>An error has occured while loading threads. Please try again.</span></ModalBox>\n                </div> :\n                <div className='thread-list'>\n                    {threadsStatus === 'complete' && threads.length === 0 && <span className='info-empty-board'>This board is empty!</span>}\n                    {threads && threadsStatus === 'complete' ? threads.map(thread => {\n                        return (\n                            <ThreadListElement\n                                key={thread._id}\n                                thread={thread}\n                                lastComment={thread.lastComment}\n                                sticky={thread.sticky}\n                                loaded={true}\n                            />\n                        );\n                    }) : <>\n                            <ThreadListElement loaded={false} />\n                            <ThreadListElement loaded={false} />\n                            <ThreadListElement loaded={false} />\n                            <ThreadListElement loaded={false} />\n                            <ThreadListElement loaded={false} />\n                        </>\n                    }\n                </div>\n\n            }\n            <Divider />\n            <div className='thread-navigation'>\n            </div>\n        </div>\n    );\n}\n\nexport default styled(ThreadListPane)`\n    & .thread-navigation > *:first-child {\n        margin-right: 16px;\n    }\n    & .info-empty-board {\n        text-align: center;\n        color: #656565cc;\n    }\n    & .thread-error {\n        display: flex;\n        justify-content: center;\n        color: #ea3f3f;\n    }\n`;","import styled from \"styled-components\";\nimport React from 'react';\nimport { fontSizeLg } from \"./uiSettings\";\nimport { ReactComponent as UserImage } from '../svgs/user.svg';\n\nfunction AvatarPane(props) {\n    const { className } = props;\n    const author = props.author ?? {};\n    \n    return (\n        <div className={className}>\n            <div className='avatar-image'>\n                <UserImage fill='#ccc' width='50px' height='50px' />\n            </div>\n            <div className='avatar-details'>\n                <span className='avatar-username'>\n                    {author.username}\n                </span>\n            </div>\n        </div>\n    );\n}\n\nexport default styled(AvatarPane)`\n    display: block;\n    width: 150px;\n    padding: 8px;\n    color: ${props => props.theme.blackTextColor};\n    & .avatar-image {\n        width: 75px;\n        height: 75px;\n        border:1px solid #ccc;\n        margin: 8px auto;\n        position: relative;\n        > * {\n            position: absolute;\n            transform: translate(50%,-50%);\n            top: 50%; right: 50%;\n\n        }\n    }\n\n    & .avatar-details {\n        width: 100%;\n        text-align:center;\n\n        & .avatar-username {\n            padding-bottom: 8px;\n            font-size: ${fontSizeLg};\n        }\n    }\n`;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport ProjectAPI from \"../api/ProjectAPI\";\nimport { logoutAction } from \"./userSlice\";\n\nexport const getAllComments = createAsyncThunk('comments/getAllComments', async (args, { dispatch, getState }) => {\n    const { threadId } = args;\n    try {\n        const user = getState().user.data;\n        const response = await ProjectAPI.getComments(user.token, threadId);\n        return response;\n    } catch (err) {\n        const { statusCode } = err.response.data;\n        if (statusCode && statusCode === - 100) {\n            dispatch(logoutAction());\n        } else {\n            throw new Error('Request failed.');\n        }\n    }\n});\n\nexport const createComment = createAsyncThunk('comments/createComment', async (args, { dispatch, getState }) => {\n    const { comment, threadId } = args;\n    try {\n        const user = getState().user.data;\n        const response = await ProjectAPI.createComment(user.token, threadId, comment);\n        return response;\n    } catch (err) {\n        const { statusCode } = err.response.data;\n        if (statusCode && statusCode === - 100) {\n            dispatch(logoutAction());\n        } else {\n            throw new Error('Data fetch failed.');\n        }\n    }\n});\n\nexport const createRating = createAsyncThunk('comments/createRating', async (args, { dispatch }) => {\n    const { data, token } = args;\n    try {\n        const response = await ProjectAPI.createRating(token, data);\n        return response;\n    } catch (err) {\n        const { statusCode } = err.response.data;\n        if (statusCode && statusCode === - 100) {\n            dispatch(logoutAction());\n        } else {\n            throw new Error('Request failed.');\n        }\n    }\n});\n\nexport const updateRating = createAsyncThunk('comments/updateRating', async (args, { dispatch }) => {\n    const { data, token } = args;\n    try {\n        const response = await ProjectAPI.createRating(token, data);\n        if(response) {\n            return {\n                userRating: response,\n                total: response === 'upvote' ? 2 : -2\n            };\n        }\n        return response;\n    } catch (err) {\n        const { statusCode } = err.response.data;\n        if (statusCode && statusCode === - 100) {\n            dispatch(logoutAction());\n        } else {\n            throw new Error('Request failed.');\n        }\n    }\n});\n\nconst initialState = {\n    status: 'idle',\n    data: [],\n    error: null\n};\n\nexport const getCommentsSelector = (state) => {\n    return state.comments.data ?? [];\n}\n\nexport const commentsStatusSelector = (state) => {\n    return state.comments.status;\n}\n\nexport const commentByIdSliceSelector = (state, id) => state.data.find(comment => comment._id === id);\n\n\nexport const commentsPagingSelector = (state, page, itemsPerPage) => {\n    const comments = state.comments.data;\n    const totalAmountOfPages = Math.ceil(comments.length / itemsPerPage);\n    return { items: comments.slice((page - 1) * itemsPerPage, page * itemsPerPage), totalAmountOfPages };\n}\n\nexport const comments = createSlice({\n    name: 'comments',\n    initialState,\n    reducers: {\n    },\n    extraReducers: {\n        [getAllComments.pending]: (state, action) => {\n            state.status = 'loading';\n            return state;\n        },\n        [getAllComments.fulfilled]: (state, action) => {\n            if (action.payload) {\n                state.status = 'complete';\n                state.data = action.payload;\n                console.log(action.payload);\n            }\n            return state;\n        },\n        [getAllComments.rejected]: (state, action) => {\n            state.status = 'failed';\n            return state;\n        },\n        [createRating.pending]: (state, action) => {\n            return state;\n        },\n        [createRating.fulfilled]: (state, action) => {\n            console.log('createRating')\n            const newRating = action.payload;\n            let { comment: commentId } = action.meta.arg.data;\n            let targetComment = state.data.find(comment => comment._id === commentId);\n            targetComment.userRating = newRating;\n            let { rating } = targetComment;\n            if(newRating === 'upvote') {\n                rating.totalUpvotes++;\n                rating.total++;\n            } else if(newRating === 'downvote') {\n                rating.totalUpvotes--;\n                rating.total--;\n            }\n            return state;\n        },\n        [createComment.fulfilled]: (state, action) => {\n            const newComment = action.payload;\n            console.log(action.payload);\n            state.data.push(newComment);\n            return state;\n        },\n        [updateRating.fulfilled]: (state, action) => {\n            const { userRating, total } = action.payload;\n            let { comment: commentId } = action.meta.arg.data;\n            let targetComment = state.data.find(comment => comment._id === commentId);\n            targetComment.userRating = userRating;\n            let { rating } = targetComment;\n            rating.total += total;\n            return state;\n        },\n        [createRating.rejected]: (state, action) => {\n            return state;\n        }\n    }\n});\n\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M83.952,34.479L50.056,0.585c-0.781-0.781-2.047-0.781-2.828,0L13.333,34.479c-0.781,0.781-0.781,2.047,0,2.828l9.03,9.031 c0.375,0.375,0.883,0.586,1.414,0.586c0.53,0,1.039-0.211,1.414-0.586l14.534-14.532v63.478c0,1.104,0.896,2,2,2H55.56 c1.104,0,2-0.896,2-2V31.807l14.532,14.532c0.75,0.75,2.078,0.75,2.828,0l9.031-9.031c0.375-0.375,0.586-0.884,0.586-1.414 C84.538,35.364,84.327,34.854,83.952,34.479z\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgUpArrow = function SvgUpArrow(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"97.285px\",\n    height: \"97.285px\",\n    viewBox: \"0 0 97.285 97.285\",\n    style: {\n      enableBackground: \"new 0 0 97.285 97.285\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgUpArrow, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/up-arrow.13e1a3ad.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M441.156,322.876l-48.666-47.386c-3.319-3.243-8.619-3.234-11.93,0.017l-81.894,80.299V8.533 c0-4.71-3.823-8.533-8.533-8.533h-68.267c-4.71,0-8.533,3.823-8.533,8.533v347.273l-81.894-80.299 c-3.311-3.243-8.602-3.251-11.921-0.017l-48.666,47.386c-1.655,1.604-2.586,3.806-2.586,6.11c0,2.304,0.939,4.506,2.586,6.11 l179.2,174.481c1.655,1.613,3.806,2.423,5.948,2.423c2.15,0,4.292-0.811,5.956-2.423l179.2-174.481 c1.647-1.604,2.577-3.806,2.577-6.11C443.733,326.682,442.803,324.48,441.156,322.876z\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgDownArrow = function SvgDownArrow(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDownArrow, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/down-arrow.f59c5c33.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport styled from 'styled-components';\nimport AvatarPane from '../ui/AvatarPane';\nimport Divider from '../ui/Divider';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport { dateFormat, fontSizeLg, fontSizeMd } from '../ui/uiSettings';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createRating, updateRating } from '../slices/commentsSlice';\nimport { getUserSelector } from '../slices/userSlice';\nimport { ReactComponent as UpArrow } from '../svgs/up-arrow.svg';\nimport { ReactComponent as DownArrow } from '../svgs/down-arrow.svg';\n\nfunction ThreadComment(props) {\n    const { comment, className } = props;\n    const { author } = comment;\n    const user = useSelector(getUserSelector);\n    const dispatch = useDispatch();\n    const rating = comment.rating || {};\n\n    async function handleRating(rating) {\n        if (rating !== comment.userRating) {\n            if (comment.userRating) {\n                dispatch(\n                    updateRating({\n                        data: { type: rating, rated: author._id, comment: comment._id, thread: comment.thread },\n                        token: user.token\n                    })\n                );\n            } else {\n                dispatch(\n                    createRating({\n                        data: { type: rating, rated: author._id, comment: comment._id, thread: comment.thread },\n                        token: user.token\n                    })\n                );\n            }\n\n        }\n    }\n\n    return (\n        <div className={className}>\n            <div>\n                <AvatarPane author={author} />\n                <Divider />\n                <div className='avatar-arrows'>\n                    <div className='avatar-arrow-section'>\n                        <div className='arrow' onClick={() => handleRating('upvote')}>\n                            <UpArrow fill={comment.userRating === 'upvote' ? 'green' : '#ccc'} alt='' />\n                        </div>\n\n                    </div>\n                    {rating.total}\n                    <div className='avatar-arrow-section' onClick={() => handleRating('downvote')}>\n                        <div className='arrow'>\n                            <DownArrow fill={comment.userRating === 'downvote' ? 'red' : '#ccc'} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Divider vertical />\n            <div className='thread-text'>\n                {comment.text}\n                <div className='thread-info-bar'>\n                    <Moment format={dateFormat}>{comment.dateTime}</Moment>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default styled(ThreadComment)`\n    display: flex;\n    border: 1px solid #ccc;\n    height: 250px;\n    width: 100%;\n    & .thread-text {\n        width: 100%;\n        position: relative;\n        padding: 8px;\n        font-size: ${fontSizeLg};\n    }\n    & .thread-info-bar {\n        padding: 8px;\n        position: absolute;\n        bottom:0;\n        right: 0;\n    }\n    & > *:last-child {\n        padding-bottom: 8px;\n    }\n\n    & .avatar-arrows {\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n        margin-top: 24px;\n        & .arrow {\n            max-width: 35px;\n\n            & > svg {\n                width: 100%;\n                height: 100%;\n            }\n        }\n        & .avatar-arrow-section {\n            display: flex;\n            flex-wrap: wrap;\n            flex-direction: column;\n            text-align: center;\n            cursor: pointer;\n\n        }\n    }\n`;","import { Form, Formik } from 'formik';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { createComment } from '../slices/commentsSlice';\nimport DefaultButton from '../ui/DefaultButton';\nimport FormikBasicInput, { StyledTextArea } from '../ui/FormikBasicInput';\nimport Title from '../ui/Title';\n\nfunction CommentForm(props) {\n\n    const { threadId, className } = props;\n    const dispatch = useDispatch();\n\n    async function handleSubmit(values, { resetForm }) {\n        try {\n            dispatch(createComment({ comment: values, threadId }));\n            resetForm();\n        } catch (err) {\n\n        }\n    }\n\n    return (\n        <Formik\n            initialValues={\n                {\n                    text: '',\n                    threadId\n                }\n            }\n            onSubmit={handleSubmit}\n        >\n            <Form className={className}>\n                <Title className='comment-title' dark>Write your comment...</Title>\n                <FormikBasicInput name='text'>\n                    {\n                        ({ field, inError }) => { return (<StyledTextArea className='text-form' size='area' inError={inError} type=\"text\" {...field} />) }\n                    }\n                </FormikBasicInput>\n                <DefaultButton>Submit</DefaultButton>\n            </Form>\n        </Formik>\n    );\n}\n\nexport default styled(CommentForm)`\n    & > .comment-title {\n        padding-bottom: 8px;\n    }\n`;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport Container from '../ui/Container';\nimport Title, { Subtitle } from '../ui/Title';\nimport ThreadComment from './ThreadComment';\nimport styled from 'styled-components';\nimport CommentForm from './CommentForm';\nimport LinkText from '../ui/LinkText';\nimport Moment from 'react-moment';\nimport { dateFormat } from '../ui/uiSettings';\nimport { threadByIdSelector, threadsStatusSelector } from '../slices/threadsSlice';\nimport { commentsPagingSelector, commentsStatusSelector, getAllComments } from '../slices/commentsSlice';\nimport usePaging from '../hooks/usePaging';\n\nfunction Thread(props) {\n    const { className } = props;\n    const { threadId } = useParams();\n\n    const itemsPerPage = 10;\n    const [page, changeCurrentPage] = usePaging('page');\n    const { items: comments, totalAmountOfPages } = useSelector(state => commentsPagingSelector(state, page, itemsPerPage));\n    const dispatch = useDispatch();\n    const thread = useSelector(state => threadByIdSelector(state, threadId)) || {};\n    const threadsLoaded = useSelector(threadsStatusSelector) === 'complete';\n    const commentsStatus = useSelector(commentsStatusSelector);\n    // Paging thread comments\n    const pageNumbers = [...Array(totalAmountOfPages + 1).keys()].slice(1);\n\n    useEffect(() => {\n        dispatch(\n            getAllComments(\n                { threadId }\n            )\n        );\n    }, [dispatch, threadId]);\n\n    return (\n        <div className={className}>\n            <Container light>\n                <Title>{thread.title}</Title>\n                {thread.dateTime && <Subtitle light><Moment format={dateFormat}>{thread.dateTime}</Moment></Subtitle>}\n            </Container>\n            <Container>\n                <div className='thread-comments'>\n                    {commentsStatus === 'complete' && comments.map(comment => <ThreadComment comment={comment} key={comment._id} />)}\n                </div>\n                {(threadsLoaded) && totalAmountOfPages > 1 && <div className='thread-pages'>\n                    Go to page...\n                    {pageNumbers && pageNumbers.map((num, idx) => <LinkText key={idx} onClick={() => changeCurrentPage(num)} selected={num === page}>{num}</LinkText>)}\n                </div>\n                }\n                {!thread.locked && <CommentForm className='thread-comment-form' threadId={threadId} />}\n            </Container>\n        </div>\n    );\n}\n\nexport default styled(Thread)`\n& .thread-comments > *:not(:first-child) {\n    margin: 24px 0;\n}\n& .thread-comment-form {\n    margin-top: 16px;\n}\n\n.thread-pages > * {\n    padding: 3px;\n}\n`;\n\n","import { Form, Formik } from 'formik';\nimport React from 'react';\nimport { useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport DefaultButton from '../ui/DefaultButton';\nimport Divider from '../ui/Divider';\nimport Title from '../ui/Title';\nimport * as Yup from 'yup';\nimport LinkText from '../ui/LinkText';\nimport FormikBasicInput, { StyledInput, StyledTextArea } from '../ui/FormikBasicInput';\nimport { appName } from '../ui/uiSettings';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createThread } from '../slices/threadsSlice';\nimport { getUserSelector } from '../slices/userSlice';\n\nconst ThreadSchema = Yup.object().shape({\n    title: Yup.string().required('This field is required.').max(50),\n    text: Yup.string().required('This field is required.').max(500)\n});\n\nfunction ThreadForm(props) {\n\n    const { className, boardId, redirectTo, onSubmit } = props;\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const user = useSelector(getUserSelector);\n    document.title = `New thread - ${appName}`;\n\n    async function handleSubmit(values, { setSubmitting }) {\n        setSubmitting(true);\n        try {\n            await dispatch(createThread({token: user.token, data: values}));\n            history.push(redirectTo);\n            onSubmit();\n        } catch (err) {\n            setSubmitting(false);\n        }\n    }\n\n    return (\n        <Formik\n            initialValues={\n                {\n                    title: '',\n                    text: '',\n                    sticky: false,\n                    locked: false,\n                    boardId: boardId\n                }\n            }\n            onSubmit={handleSubmit}\n            validationSchema={ThreadSchema}\n        >\n            {(formik) => \n                <Form className={className}>\n                    <div>\n                        <LinkText onClick={() => history.goBack()}>Go back</LinkText>\n                    </div>\n                    <Title dark>New Thread</Title>\n                    <Divider />\n                    <div>\n                        <span>Title:</span>\n                        <FormikBasicInput name='title'>\n                            {\n                                ({ field, inError, props }) => { return (<StyledInput disabled={formik.isSubmitting} inError={inError} type=\"text\" {...field} />) }\n                            }\n                        </FormikBasicInput>\n                    </div>\n                    <div>\n                        <span>Text:</span>\n                        <FormikBasicInput name='text'>\n                            {\n                                ({ field, inError, props }) => { return (<StyledTextArea disabled={formik.isSubmitting} size='area' inError={inError} type=\"text\" {...field} />) }\n                            }\n                        </FormikBasicInput>\n                    </div>\n                    <div className='inline-blocked'>\n                        <div>\n                            <span>Sticky:</span>\n                            <FormikBasicInput name='sticky'>\n                                {\n                                    ({ field, inError, props }) => { return (<input type='checkbox' inError={inError} {...field} />) }\n                                }\n                            </FormikBasicInput>\n                        </div>\n                        <div>\n                            <span>Locked:</span>\n                            <FormikBasicInput name='locked'>\n                                {\n                                    ({ field, inError, props }) => { return (<input type='checkbox' inError={inError} {...field} />) }\n                                }\n                            </FormikBasicInput>\n\n                        </div>\n                    </div>\n                    <DefaultButton type='submit'>Submit</DefaultButton>\n                </Form>\n            }\n\n        </Formik>\n    );\n}\n\nexport default styled(ThreadForm)`\n    padding: 8px;\n    & > span {\n        display: block;\n    }\n    & .input {\n        width: 100%;\n        font-family: inherit;\n        border:1px solid #ccc;\n        border-radius: 5px;\n        padding: 8px;\n        font-size: .9rem;\n    }\n    & > .inline-blocked {\n        > * {\n            display: inline-block;\n        }\n    }\n`;","import { createAsyncThunk, createSlice, current } from \"@reduxjs/toolkit\";\nimport ProjectAPI from \"../api/ProjectAPI\";\nimport { logoutAction } from \"./userSlice\";\n\nexport const fetchUsersForBoard = createAsyncThunk('users/fetchUsersForBoard', async (args, { dispatch, getState }) => {\n    const { username, boardId } = args;\n    try {\n        const user = getState().user.data;\n        const response = await ProjectAPI.getUsers(user.token, username, boardId);\n        console.log(response);\n        return response;\n    } catch (err) {\n        const { statusCode } = err.response.data;\n        if (statusCode && statusCode === - 100) {\n            dispatch(logoutAction());\n        } else {\n            throw new Error('Request failed.');\n        }\n    }\n});\n\nexport const addUsersToBoard = createAsyncThunk('users/addUsersToBoard', async (args, { dispatch, getState }) => {\n    const { users, boardId } = args;\n    try {\n        const user = getState().user.data;\n        await ProjectAPI.addUsersToBoard(user.token, boardId, { users });\n        return {\n            boardId,\n            users\n        };\n    } catch (err) {\n        const { statusCode } = err.response.data;\n        if (statusCode && statusCode === - 100) {\n            dispatch(logoutAction());\n        } else {\n            throw new Error('Request failed.');\n        }\n    }\n});\n\nconst initialState = {\n    status: 'idle',\n    data: [],\n    error: null\n};\n\nexport const getUsersSelector = (state) => {\n    return state.users.data;\n}\n\nexport const usersStatusSelector = (state) => {\n    return state.users.status;\n}\n\nexport const userByUsernameSelector = (state, username, boardId) => {\n    return state.users.data.filter(user => user.username.toLowerCase().includes(username.toLowerCase()) && !user.boards.includes(boardId));\n}\n\nexport const usersByBoardSelector = (state, boardId) => {\n    return state.users.data.filter(user => user.boards.includes(boardId));\n}\n\nexport const users = createSlice({\n    name: 'users',\n    initialState,\n    reducers: {\n    },\n    extraReducers: {\n        [fetchUsersForBoard.pending]: (state, action) => {\n            state.status = 'loading';\n            return state;\n        },\n        [fetchUsersForBoard.fulfilled]: (state, action) => {\n            if (action.payload) {\n                const users = action.payload;\n\n                // only add new user if it already isn't in the state\n                let currentUsers = state.data;\n                for (let i = 0, responseLength = users.length; i < responseLength; i++) {\n                    let exists = false;\n                    for (let j = 0, currentUsersLength = currentUsers.length; j < currentUsersLength; j++) {\n                        if (currentUsers[j]._id === users[i]._id) {\n                            exists = true;\n                            break;\n                        }\n                    }\n                    if (!exists) {\n                        currentUsers.push(users[i]);\n                    }\n                }\n                state.status = 'complete';\n            }\n            return state;\n        },\n        [fetchUsersForBoard.rejected]: (state, action) => {\n            state.status = 'failed';\n            return state;\n        },\n        [addUsersToBoard.fulfilled]: (state, action) => {\n            let users = state.data;\n            let { boardId, users: addedUsersIds } = action.payload;\n            for (let i = 0; i < users.length; i++) {\n                let currentUser = users[i];\n                for (let j=0; j < addedUsersIds.length; j++) {\n                    let currentAdddedUserId = addedUsersIds[j];\n                    currentUser._id === currentAdddedUserId && currentUser.boards.push(boardId);\n                }\n            }\n            return state;\n        }\n    }\n});","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { fetchUsersForBoard, usersByBoardSelector } from '../slices/usersSlice';\nimport AvatarPane from '../ui/AvatarPane';\n\nfunction PeopleHome(props) {\n    const { className, boardId } = props;\n\n    const users = useSelector(state => usersByBoardSelector(state, boardId));\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchUsersForBoard({boardId: boardId}));\n    }, [boardId, dispatch]);\n\n    return (\n        <div className={className}>\n            <div className='people-person-list'>\n                {users && users.map(person => <AvatarPane key={person._id} className='people-avatar-icon' author={person} />)}\n            </div>\n        </div>\n    );\n}\n\nexport default styled(PeopleHome)`\n    & .people-person-list {\n        display: flex;\n    }\n    .people-avatar-icon:hover {\n        background-color: ${props => props.theme.hoverColor};\n        transition: background-color 0.2s ease;\n        transition: color 0.2s ease;\n        cursor: pointer;\n        color: ${props => props.theme.hoverTextColor};\n    }\n`;","import styled from \"styled-components\";\nimport React from 'react';\n\nfunction AvatarCard(props) {\n    const { author, className, onSelect } = props;\n    return (\n        <div className={className} onClick={() => onSelect(author._id)}>\n            <div className='avatar-image'>\n            </div>\n            <div className='avatar-details'>\n                <span className='avatar-username'>{author.username}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default styled(AvatarCard)`\n    display: flex;\n    align-content: center;\n    align-items: center;\n    width: 100%;\n    padding: 8px;\n    color: ${props => props.selected ? '#6f6f6f' : props.theme.blackTextColor};\n    background-color: ${props => props.selected ? '#d9ffd6' : 'initial'};\n    border: ${props => props.selected ? '1px solid #e4e4e4' : '1px solid #fff'};\n    margin: 2px 0;\n    & .avatar-image {\n        width: 50px;\n        height: 50px;\n        border:1px solid #ccc;\n        margin-right: 16px;\n    }\n\n    & .avatar-details {\n        width: 100%;\n\n        & .avatar-username {\n            padding-bottom: 8px;\n        }\n    }\n    &:hover {\n        transition: background-color 0.2s ease;\n        background-color: ${props => props.theme.hoverColor};\n        color: ${props => props.theme.hoverTextColor};\n        cursor: pointer;\n    }\n`;","import styled from \"styled-components\";\n\nexport default styled.input`\n& {\n    width: 100%;\n    font-family: inherit;\n    border:1px solid #ccc;\n    border-radius: 5px;\n    padding: 8px;\n    font-size: .9rem;\n}\n`;","import styled from 'styled-components';\n\nexport default styled.div`\n    overflow-y: scroll;\n    max-height: ${props => props.height ? props.height : '500px'};\n`;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { addUsersToBoard, fetchUsersForBoard, userByUsernameSelector } from '../slices/usersSlice';\nimport AvatarCard from '../ui/AvatarCard';\nimport BaseInput from '../ui/BaseInput';\nimport DefaultButton from '../ui/DefaultButton';\nimport Divider from '../ui/Divider';\nimport ScrollBox from '../ui/ScrollBox';\nimport Title from '../ui/Title';\n\nfunction AddPeople(props) {\n\n    const { className, boardId } = props;\n    const [peopleIds, setPeopleIds] = useState([]);\n\n    const [contacts] = useState([]);\n    const dispatch = useDispatch();\n    const [searchText, setSearchText] = useState('');\n    \n    const users = useSelector(state => userByUsernameSelector(state, searchText, boardId));\n    console.log(users);\n    function handleClick(id) {\n        let prevValues = [...peopleIds];\n        if (!peopleIds.includes(id)) {\n            prevValues = [...prevValues, id];\n        } else {\n            const index = prevValues.indexOf(id);\n            prevValues.splice(index, 1)\n            setPeopleIds(prevValues);\n        }\n        setPeopleIds(prevValues);\n    }\n\n    useEffect(() => {\n        //dispatch(getContacts({ boardId: boardId }));\n    }, [boardId, dispatch]);\n\n    function submitValues() {\n        dispatch(addUsersToBoard({users: peopleIds, boardId: boardId}));\n        // values are peopleIds..\n    }\n\n    function handleSearchChange(evt) {\n        setSearchText(evt.target.value);\n    }\n\n    useEffect(() => {\n        if (searchText.length >= 3) {\n            dispatch(fetchUsersForBoard({username: searchText, boardId: boardId }));\n        }\n    }, [boardId, dispatch, searchText]);\n\n    return (\n        <div className={className}>\n            <div className='add-people-form'>\n                <div className='add-people-row'>\n                    <Title dark>\n                        Your contacts\n                </Title>\n                    <Divider />\n                    {contacts && contacts.map(contact => <AvatarCard onSelect={handleClick} selected={peopleIds.includes(contact.id)} key={contact.id} author={contact} />)}\n\n                </div>\n                <div className='add-people-row'>\n                    <Title dark>\n                        Search person\n                </Title>\n                    <Divider />\n                    <div>\n                        Username:\n                    <BaseInput value={searchText} onChange={handleSearchChange} />\n                        <div className='bottom-toolbar'>\n                        </div>\n                        <ScrollBox height='500px'>\n                            {users && users.map(user => <AvatarCard onSelect={handleClick} selected={peopleIds.includes(user._id)} key={user._id} author={user} />)}\n                        </ScrollBox>\n                        <Divider />\n                    </div>\n                </div>\n            </div>\n            <div className='bottom-toolbar'>\n                <DefaultButton onClick={submitValues} disabled={peopleIds.length === 0}>Add</DefaultButton>\n            </div>\n\n        </div>\n    );\n}\n\nexport default styled(AddPeople)`\n    & {\n        padding: 8px;\n    }\n    & .add-people-form {\n        display: flex;\n        justify-content: space-around;\n\n        > *:first-child {\n            margin-right: 8px;\n        }\n        > *:last-child {\n            margin-left: 8px;\n        }\n        @media (max-width: 1200px) {\n            flex-wrap: wrap;\n        }\n\n        & .add-people-row {\n\n            @media (max-width: 1200px) {\n                width: 100%;\n            }\n            width: 100%;\n        }\n    }\n\n    & .bottom-toolbar {\n        margin-top: 8px;\n        text-align: right;\n    }\n`;","import React, { useContext, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams, Switch, useLocation } from 'react-router';\nimport Container from '../ui/Container';\nimport TabHeader from '../ui/TabHeader';\nimport TabItem from '../ui/TabItem';\nimport ThreadListPane from '../Threads/ThreadListPane';\nimport Divider from '../ui/Divider';\nimport Thread from '../Threads/Thread';\nimport styled from 'styled-components';\nimport ThreadForm from '../Threads/ThreadForm';\nimport PeopleHome from '../People/PeopleHome';\nimport AddPeople from '../People/AddPeople';\nimport { Link } from 'react-router-dom';\nimport PrivateRoute from '../ui/PrivateRoute';\nimport { appName, fontSizeMd } from '../ui/uiSettings';\nimport { getAllThreads, resetThreads, threadsStatusSelector } from '../slices/threadsSlice';\nimport { boardByIdSelector } from '../slices/boardsSlice';\nimport NavigationContext from '../contexts/NavigationContext';\n\nfunction BoardHome(props) {\n    const { match, className } = props;\n    const { id } = useParams();\n    const board = useSelector(state => boardByIdSelector(state, id)) || {};\n    const threadsStatus = useSelector(state => threadsStatusSelector(state, id));\n    const pageTitle = useRef('Loading...');\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const history = useHistory();\n    const navContext = useContext(NavigationContext);\n\n    /**\n     * After every render, change the page title only if board name has changed. \n     */\n    useEffect(() => {\n        if (board.name) {\n            pageTitle.current = board.name;\n        }\n        document.title = `${pageTitle.current} - ${appName}`;\n        navContext.setTitle(pageTitle.current);\n\n    }, [board.name, navContext]);\n\n    useEffect(() => {\n        if(threadsStatus === 'idle') {\n            dispatch(getAllThreads({ boardId: id }));\n        }\n        return function() {\n            if(threadsStatus === 'complete') {\n                dispatch(resetThreads());\n            }\n        }\n    }, [dispatch, id, threadsStatus]);\n\n    function handleTabItemClick(tabValue) {\n        switch (tabValue) {\n            case 'boards':\n                history.push(`${match.url}/thread`);\n                break;\n            case 'people':\n                history.push(`${match.url}/people`);\n                break;\n            default:\n                break;\n        }\n    }\n\n    return (\n        <div className={className}>\n            <TabHeader>\n                <TabItem selected={location.pathname === match.url || location.pathname.includes('/thread')} onClick={evt => handleTabItemClick('boards')}>Board</TabItem>\n                <TabItem selected={location.pathname.includes('/people')} onClick={evt => handleTabItemClick('people')}>People</TabItem>\n            </TabHeader>\n            <div>\n                <Switch>\n                    <Container padding='8px'>\n                        <PrivateRoute path={`${match.url}/thread`} render={(props) => (\n                            <Switch>\n                                <PrivateRoute exact path={`${match.url}/thread`}>\n                                    <div className='flexed'>\n                                        <Link to={`${match.url}/thread/new`}  >+ New thread...</Link>\n                                    </div>\n                                    <Divider />\n                                    <ThreadListPane boardId={id} />\n                                </PrivateRoute>\n                                <PrivateRoute path={`${match.url}/thread/new`} render={(props) => (<ThreadForm {...props} boardId={id} redirectTo={`${match.url}/thread`} />)} />\n                                <PrivateRoute path={`${match.url}/thread/:threadId`} component={Thread} />\n                            </Switch>\n\n                        )}>\n                        </PrivateRoute>\n                        <PrivateRoute path={`${match.url}/people`}>\n                            <Switch>\n                                <PrivateRoute path={`${match.url}/people/add`} render={(props) => <AddPeople {...props} boardId={id} />} />\n                                <PrivateRoute exact path={`${match.url}/people/`}>\n                                    <div className='flexed'>\n                                        <Link to={`${match.url}/people/add`}>+ Add people...</Link>\n                                    </div>\n                                    <Divider />\n                                    <PeopleHome boardId={id} />\n                                </PrivateRoute>\n                            </Switch>\n                        </PrivateRoute>\n                    </Container>\n                </Switch>\n            </div>\n        </div>\n    );\n}\n\nexport default styled(BoardHome)`\n    & .flexed {\n        text-align: right;\n        font-size: ${fontSizeMd};\n    }\n`;","import { Form, Formik } from 'formik';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport DefaultButton from './DefaultButton';\nimport { StyledInput } from './FormikBasicInput';\nimport Title from './Title';\nimport { appName, fontSizeMd } from './uiSettings';\nimport Divider from './Divider';\n\nfunction Register(props) {\n\n    const { className } = props;\n    const dispatch = useDispatch();\n\n    function handleSubmit(values, { setSubmitting }) {\n        console.log(values);\n        setSubmitting(true);\n        //dispatch(registerAction(values));\n    }\n\n    return (\n        <div className={className}>\n            <Formik\n                initialValues={{\n                    username: '',\n                    password: '',\n                    confirmPassword: '',\n                    email: ''\n                }}\n                onSubmit={handleSubmit}>\n                {formik => (\n                    <Form onClick={console.log(formik)} className='login-form'>\n                        <Title className='form-title' dark>{appName}</Title>\n                        <Divider />\n                        <form>\n                            <span>Create your account...</span>\n                            <div className='form-input-section'>\n                                <span>Username:</span>\n                                <StyledInput\n                                    onChange={formik.handleChange}\n                                    disabled={formik.isSubmitting}\n                                    type='text'\n                                    name='username'\n                                    id='username' />\n                            </div>\n                            <div className='form-input-section'>\n                                <span className='form-input-text'>Email:</span>\n                                <StyledInput\n                                    onChange={formik.handleChange}\n                                    disabled={formik.isSubmitting}\n                                    type='email'\n                                    name='email'\n                                    id='email' />\n                            </div>\n                            <div className='form-input-section'>\n                                <span className='form-input-text'>Password:</span>\n                                <StyledInput\n                                    onChange={formik.handleChange}\n                                    disabled={formik.isSubmitting}\n                                    type='password'\n                                    name='password'\n                                    id='password' />\n                            </div>\n                            <div className='form-input-section'>\n                                <span className='form-input-text'>Confim password:</span>\n                                <StyledInput\n                                    onChange={formik.handleChange}\n                                    disabled={formik.isSubmitting}\n                                    type='password'\n                                    name='confirmPassword'\n                                    id='confirmPassword' />\n                            </div>\n                            <div>\n                                \n                                <span></span>\n                                <DefaultButton type='submit'>Register</DefaultButton>\n                            </div>\n                        </form>\n                    </Form>\n                )}\n\n\n            </Formik>\n        </div>\n    );\n}\n\nexport default styled(Register)`\n    & > .login-form {\n        height: 500px;\n        border: 1px solid #ccc;\n        width: 400px;    \n        margin: 0 auto;\n        padding: 16px;\n    }\n    & > .login-form > form {\n        display: table;\n        width: 100%;\n        * {\n            font-size: ${fontSizeMd};\n        }\n        > *:last-child {\n            text-align: right;\n        }\n    }\n    & > .login-form > .form-title {\n        margin-bottom: 8px;\n    }\n    & .form-input-section {\n        height: 50px;\n\n        > *:last-child {\n            display: initial;\n        }\n    }\n    & > .login-form > form > * {\n        display: table-row;\n\n        > *:first-child {\n            margin-right: 8px;\n        }\n    }\n    & > .login-form > form > * > * {\n        display: table-cell;\n\n        > *:first-child {\n            margin-right: 8px;\n        }\n\n        > *:last-child {\n            margin-left: 8px;\n        }\n    }\n`;","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Login from './ui/Login';\nimport BoardList from './Boards/BoardList';\nimport PrivateRoute from './ui/PrivateRoute';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Navbar from './ui/Navbar';\nimport BoardForm from './Boards/BoardForm';\nimport BoardHome from './Boards/BoardHome';\nimport Register from './ui/Register';\nimport { getUserSelector } from './slices/userSlice';\nimport { getAllBoards, resetBoards } from './slices/boardsSlice';\nimport NavigationContext from './contexts/NavigationContext';\nimport { appName } from './ui/uiSettings';\n\nfunction App() {\n  const user = useSelector(getUserSelector);\n  const dispatch = useDispatch();\n  const [currentNavigation, setCurrentNavigation] = useState(appName);\n  const boardStatus = useSelector(state => state.boards.status);\n\n\n  useEffect(() => {\n    if (user.loggedIn && boardStatus === 'idle') {\n      dispatch(getAllBoards());\n    }\n\n    return () => {\n      if (boardStatus === 'complete') {\n        dispatch(resetBoards());\n      }\n    }\n\n  }, [boardStatus, dispatch, user.id, user.loggedIn, user.token]);\n\n  /**\n   * Render app based on login status.\n   */\n  if (!user.loggedIn) {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route path='/register'>\n              <Register />\n            </Route>\n            <Route path='/'>\n              <Login />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  } else {\n\n    return (\n      <Router>\n        <NavigationContext.Provider value={{\n          title: currentNavigation,\n          setTitle: (newTitle) => { setCurrentNavigation(newTitle) }\n        }}>\n          <Navbar />\n          <Switch>\n            <PrivateRoute path='/projects/new'>\n              <BoardForm />\n            </PrivateRoute>\n            <PrivateRoute path='/projects/:id' component={BoardHome}>\n            </PrivateRoute>\n            <PrivateRoute exact path='/projects'>\n              <BoardList />\n            </PrivateRoute>\n\n          </Switch>\n\n        </NavigationContext.Provider>\n      </Router>\n\n    );\n  }\n\n}\n\nexport default App;\n","import { combineReducers, createStore, getDefaultMiddleware, applyMiddleware } from \"@reduxjs/toolkit\";\nimport { user } from \"../slices/userSlice\";\nimport { boards } from \"../slices/boardsSlice\";\nimport { threads } from \"../slices/threadsSlice\";\nimport { comments } from \"../slices/commentsSlice\";\nimport { users } from \"../slices/usersSlice\";\nimport { loadFromStorage, saveToStorage } from \"./localStorage\";\n\nconst initialState = loadFromStorage();\n\nconst appReducer = combineReducers({ \n  user: user.reducer, \n  boards: boards.reducer, \n  threads: threads.reducer, \n  comments: comments.reducer,\n  users: users.reducer });\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'auth/logout') {\n    state = undefined;\n  }\n\n  return appReducer(state, action);\n}\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(...getDefaultMiddleware()));\nstore.subscribe(() => {\n  saveToStorage(store.getState());\n});\nexport default store;","\nexport function saveToStorage(state) {\n    try {\n        const { user } = state;\n        let serializedState = JSON.stringify({ user });\n        localStorage.setItem('state', serializedState);\n    } catch (err) {\n        \n    }\n}\n\nexport function loadFromStorage() {\n    try {\n        let storedState = localStorage.getItem('state');\n        if(storedState) {\n            return JSON.parse(storedState);\n        } else {\n            return undefined;\n        }\n    } catch (err) {\n        return undefined;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\nimport { ThemeProvider } from 'styled-components';\n\nconst theme = {\n  lightBg: '#395490',\n  bgColor: '#315cb9',\n  hoverColor: '#2c57af1f',\n  hoverTextColor: '#708292',\n  blackTextColor: '#2b2b2b',\n  linkTextColor: '#4d69d2',\n  navTextColor: '#dfe6ff'\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}